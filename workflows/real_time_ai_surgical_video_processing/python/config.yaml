%YAML 1.2
# SPDX-FileCopyrightText: Copyright (c) 2023 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
extensions:
  # These extensions are automatically loaded on import in the Python application
  # - libgxf_std.so
  # - libgxf_cuda.so
  # - libgxf_multimedia.so
  # - libgxf_serialization.so
  # - libstream_playback.so

source: "replayer_multi"

replayer_multi:
  basename: "surgical_video"
  frame_rate: 0 # as specified in timestamps
  repeat: true # default: false
  realtime: false # default: true
  count: 0 # default: 0 (no frame count restriction)

replayer_oob:
  basename: "sample_clip_out_of_body_detection"
  frame_rate: 0 # as specified in timestamps
  repeat: true # default: false
  realtime: false # default: true
  count: 0 # default: 0 (no frame count restriction)

replayer_orsi:  # VideoStreamReplayer
  basename: "anonymization"
  frame_rate: 120 # as specified in timestamps
  repeat: true # default: false
  realtime: false # default: true
  count: 0 # default: 0 (no frame count restriction)


deidentification:
  block_size_h: 40
  block_size_w: 40

out_of_body_preprocessor:
  out_tensor_name: out_of_body_preprocessed
  out_dtype: "float32"
  resize_width: 256
  resize_height: 256

out_of_body_inference:
  backend: "trt"
  model_path_map:
    "out_of_body": "out_of_body_detection.onnx"
  pre_processor_map:
    "out_of_body": ["out_of_body_preprocessed"]
  inference_map:
    "out_of_body": ["out_of_body_inferred"]
  in_tensor_names: ["out_of_body_preprocessed"]
  out_tensor_names: ["out_of_body_inferred"]
  parallel_inference: false
  infer_on_cpu: false
  enable_fp16: false
  input_on_cuda: true
  output_on_cuda: true
  transmit_on_cuda: true
  is_engine_path: false

out_of_body_postprocessor:
  in_tensor_names: "out_of_body_inferred"
  out_tensor_name: "decision"

detection_preprocessor:
  out_tensor_name: ssd_preprocessed
  out_dtype: "float32"
  resize_width: 300
  resize_height: 300
  scale_min: -1.0
  scale_max: 1.0

segmentation_preprocessor:
  out_tensor_name: seg_preprocessed
  out_dtype: "float32"
  resize_width: 736
  resize_height: 480

multi_ai_inference:
  backend: "trt"
  pre_processor_map:
    "ssd": ["ssd_preprocessed"]
    "tool_seg": ["seg_preprocessed"]
  inference_map:
    "ssd":
      [
        "inference_output_num_detections",
        "inference_output_detection_boxes",
        "inference_output_detection_scores",
        "inference_output_detection_classes",
      ]
    "tool_seg": ["tool_seg_inferred"]
  parallel_inference: true # optional param, default to true
  infer_on_cpu: false # optional param, default to false
  enable_fp16: true
  input_on_cuda: true # optional param, default to true
  output_on_cuda: true # optional param, default to true
  transmit_on_cuda: true # optional param, default to true
  is_engine_path: false # optional param, default to false

segmentation_postprocessor:
  in_tensor_name: tool_seg_inferred
  network_output_type: softmax
  data_format: nchw

detection_postprocessor:
  label_text_size: 0.04
  scores_threshold: 0.5

holoviz:
  color_lut:
    [
      [0.65, 0.81, 0.89, 0.1],
      [0.2, 0.63, 0.17, 0.7],
      [0.98, 0.6, 0.6, 0.7],
      [0.89, 0.1, 0.11, 0.7],
      [0.99, 0.75, 0.44, 0.7],
      [1.0, 0.5, 0.0, 0.7],
      [0.0, 0.0, 0.0, 0.1],
    ]
