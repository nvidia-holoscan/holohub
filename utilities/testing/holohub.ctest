# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if(NOT BASE_DIRECTORY)
  message(FATAL_ERROR "Please set the BASE_DIRECTORY corresponding to where the holohub source is located")
endif()


if(NOT HOLOSCAN_SDK_VERSION)
  set(HOLOSCAN_SDK_VERSION main)
endif()

if(NOT HOLOHUB_BRANCH)
  set(HOLOHUB_BRANCH main)
endif()


set(CTEST_SOURCE_DIRECTORY "${BASE_DIRECTORY}/holohub-${HOLOHUB_BRANCH}")
set(CTEST_BINARY_DIRECTORY "${BASE_DIRECTORY}/holohub-${HOLOHUB_BRANCH}-${HOLOSCAN_SDK_VERSION}/build")

if(NOT CTEST_SITE)
  set(CTEST_SITE "SITE_NA")
endif()

if(NOT CTEST_BUILD_NAME)
  set(CTEST_BUILD_NAME "holohub-${HOLOSCAN_SDK_VERSION}")
endif()

set(CTEST_UPDATE_COMMAND "git")
set(CTEST_CMAKE_GENERATOR "Ninja")

ctest_empty_binary_directory(${CTEST_BINARY_DIRECTORY})

set(HOLOSCAN_BASE_DIR "${BASE_DIRECTORY}/holoscan-${HOLOSCAN_SDK_VERSION}")

# Copy the CDash configurations
file(COPY
     ${CMAKE_CURRENT_LIST_DIR}/CTestCustom.cmake
     DESTINATION ${CTEST_BINARY_DIRECTORY})
ctest_read_custom_files("${CTEST_BINARY_DIRECTORY}")

set(configure_options
  -DCMAKE_CUDA_COMPILER=/usr/local/cuda/bin/nvcc
  -Dholoscan_DIR=${HOLOSCAN_BASE_DIR}/public/install/lib/cmake/holoscan
  -DHOLOHUB_DATA_DIR=${BASE_DIRECTORY}/data/holohub-${HOLOHUB_BRANCH}
  -DFLOW_BENCHMARKING=ON
  # Define the default applications to test
  -DAPP_colonoscopy_segmentation=1
  -DAPP_endoscopy_tool_tracking=1
  -DAPP_endoscopy_out_of_body_detection=1
  -DAPP_multiai_endoscopy=1
  -DAPP_ultrasound_segmentation=1
  -DAPP_volume_rendering=1
)

ctest_start(Nightly)
ctest_update()
ctest_configure(OPTIONS "${configure_options}"
)
ctest_build()
ctest_test()
ctest_submit()
