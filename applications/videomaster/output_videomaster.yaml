%YAML 1.2
# SPDX-FileCopyrightText: Copyright (c) 2022-2023 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
name: replayer
components:
  - name: output
    type: nvidia::gxf::DoubleBufferTransmitter
  - name: allocator
    type: nvidia::gxf::UnboundedAllocator
  - name: component_serializer
    type: nvidia::gxf::StdComponentSerializer
    parameters:
      allocator: allocator
  - name: entity_serializer
    type:
      # You can 'nvidia::gxf::StdEntitySerializer' instead but it would cause warning messages when 'repeat' is true.
      nvidia::holoscan::stream_playback::VideoStreamSerializer
    parameters:
      component_serializers: [component_serializer]
  - type: nvidia::holoscan::stream_playback::VideoStreamReplayer
    parameters:
      transmitter: output
      entity_serializer: entity_serializer
      boolean_scheduling_term: boolean_scheduling
      directory: "/home/jjomier/dev/clara-holoscan-sdk/public/data/endoscopy/video"
      basename: "surgical_video"
      frame_rate: 0 # as specified in timestamps
      repeat: true # default: false
      realtime: true # default: true
      count: 0 # default: 0 (no frame count restriction)
  - name: boolean_scheduling
    type: nvidia::gxf::BooleanSchedulingTerm
  - type: nvidia::gxf::DownstreamReceptiveSchedulingTerm
    parameters:
      transmitter: output
      min_size: 1
---
name: broadcast
components:
  - name: input
    type: nvidia::gxf::DoubleBufferReceiver
  - name: output_visualizer
    type: nvidia::gxf::DoubleBufferTransmitter
  - type: nvidia::gxf::Broadcast
    parameters:
      source: input
  - type: nvidia::gxf::MessageAvailableSchedulingTerm
    parameters:
      receiver: input
      min_size: 1
  - type: nvidia::gxf::DownstreamReceptiveSchedulingTerm
    parameters:
      transmitter: output_visualizer
      min_size: 1
---
name: visualizer_format_converter
components:
  - name: in
    type: nvidia::gxf::DoubleBufferReceiver
  - type: nvidia::gxf::MessageAvailableSchedulingTerm
    parameters:
      receiver: in
      min_size: 1
  - name: out
    type: nvidia::gxf::DoubleBufferTransmitter
  - type: nvidia::gxf::DownstreamReceptiveSchedulingTerm
    parameters:
      transmitter: out
      min_size: 1
  - name: pool
    type: nvidia::gxf::BlockMemoryPool
    parameters:
      storage_type: 1
      block_size: 33177600 # 1920 * 1080 * 4 (channel) * 4 (bytes per pixel)
      num_blocks: 2
  - type: nvidia::holoscan::formatconverter::FormatConverter
    parameters:
      in: in
      in_dtype: "rgb888"
      out: out
      out_dtype: "rgba8888"
      out_channel_order: [2,1,0,3]
      resize_width: 1920
      resize_height: 1080
      pool: pool
---
name: visualizer
components:
- name: source_video
  type: nvidia::gxf::DoubleBufferReceiver
- name: pool
  type: nvidia::gxf::UnboundedAllocator
- type: nvidia::holoscan::videomaster::VideoMasterTransmitter
  parameters:
    use_rdma: false
    board: 0
    output: 0
    source: source_video
    width: 1920
    height: 1080
    progressive: true
    framerate: 60
    pool: pool
---
components:
  - type: nvidia::gxf::Connection
    parameters:
      source: replayer/output
      target: broadcast/input
---
components:
  - type: nvidia::gxf::Connection
    parameters:
      source: broadcast/output_visualizer
      target: visualizer_format_converter/in
---
components:
  - type: nvidia::gxf::Connection
    parameters:
      source: visualizer_format_converter/out
      target: visualizer/source_video
---
name: utils
components:
  - name: rt_clock
    type: nvidia::gxf::RealtimeClock
  - type: nvidia::gxf::GreedyScheduler
    parameters:
      clock: rt_clock
      max_duration_ms: 1000000
  - name: cuda_stream
    type: nvidia::gxf::CudaStreamPool
    parameters:
      dev_id: 0
      stream_flags: 0
      stream_priority: 0
      reserved_size: 1
      max_size: 5
  - type: nvidia::gxf::JobStatistics
    parameters:
      clock: rt_clock
