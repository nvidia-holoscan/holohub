<!--
    SPDX-FileCopyrightText: Copyright (c) 2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
    SPDX-License-Identifier: Apache-2.0

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:noNamespaceSchemaLocation="https://community.rti.com/schema/current/rti_dds_qos_profiles.xsd">

    <!-- Transport library to provide optimizations for the domain participant -->
    <qos_library name="HoloscanDDSTransport">

        <!-- Optimized profile for shared memory and local network -->
        <qos_profile name="SHMEM+LAN" base_name="BuiltinQosLib::Generic.Common">
            <domain_participant_qos>
                <participant_name>
                    <name>Holoscan DDS Video</name>
                </participant_name>
                <!-- Optimizations for the the SHMEM and UDPv4 transports. -->
                <transport_builtin>
                    <mask>SHMEM | UDPv4</mask>
                    <shmem>
                        <!-- Increase the maximum message size to 4MB to reduce fragmentation.
                             4MB is large enough for a frame up to 720p resolution in a single
                             message. This can be reduced if using smaller streams, but
                             experimentation has shown that using anything larger does not
                             typically help (even if the frame size exceeds 4MB). -->
                        <message_size_max>4194304</message_size_max>
                        <received_message_count_max>10</received_message_count_max>
                        <!-- message_size_max * received_message_count_max -->
                        <receive_buffer_size>41943040</receive_buffer_size>
                    </shmem>
                    <udpv4>
                        <!-- This helps not to lose packets. Run set_socket_buffer_sizes.sh first. -->
                        <send_socket_buffer_size>4194304</send_socket_buffer_size>
                        <recv_socket_buffer_size>4194304</recv_socket_buffer_size>
                    </udpv4>
                </transport_builtin>
            </domain_participant_qos>

            <!-- Discovery-related optimizations -->
            <base_name>
                <element>BuiltinQosSnippetLib::Optimization.Discovery.Common</element>
                <element>BuiltinQosSnippetLib::Optimization.Discovery.Endpoint.Fast</element>
                <element>BuiltinQosSnippetLib::Optimization.ReliabilityProtocol.Common</element>
            </base_name>
        </qos_profile>

    </qos_library>

    <!-- Data flow library for the data reader and writers -->
    <qos_library name="HoloscanDDSDataFlow">

        <!-- Profile for the Video streaming components -->
        <qos_profile name="Video" base_name="BuiltinQosLib::Pattern.Streaming">
            <datawriter_qos>
                <publication_name>
                    <name>VideoFrameWriter</name>
                </publication_name>
            </datawriter_qos>
            <datareader_qos>
                <subscription_name>
                    <name>VideoFrameReader</name>
                </subscription_name>
            </datareader_qos>
        </qos_profile>

        <!-- Profile for the Shape reading components -->
        <qos_profile name="Shapes" base_name="BuiltinQosLib::Generic.BestEffort">
            <datareader_qos>
                <subscription_name>
                    <name>ShapeReader</name>
                </subscription_name>
            </datareader_qos>
        </qos_profile>

    </qos_library>

</dds>
