%YAML 1.2
# SPDX-FileCopyrightText: Copyright (c) 2022 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
extensions:
  - gxf_extensions/videomaster/libgxf_videomaster.so

source: "replayer" # Valid values "replayer"  or "videomaster"

replayer:  # VideoStreamReplayer
  basename: "oob"
  frame_rate: 120 # as specified in timestamps
  repeat: true # default: false
  realtime: true # default: true
  count: 0 # default: 0 (no frame count restriction)

videomaster:
  board: 0
  input: 0
  use_rdma: true

drop_alpha_channel:  # FormatConverter
  in_dtype: "rgba8888"
  in_tensor_name: source_video
  out_tensor_name: source_video
  out_dtype: "rgb888"

format_converter:  # FormatConverter
    # in_tensor_name: source_video
    out_tensor_name: source_video
    out_dtype: "float32"
    src_roi_rect: [ 36, 328, 1264, 1008 ]
    output_img_size : [512, 512] 

format_converter_anonymization:  # FormatConverter
    # in_tensor_name: source_video
    out_tensor_name: source_video
    out_dtype: "float32"
    src_roi_rect: [ 36, 328, 1264, 1008 ]
    output_img_size : [224, 224] 

drop_alpha_channel_videomaster:  # FormatConverter
  in_dtype: "rgba8888"
  in_tensor_name: source_video
  out_tensor_name: source_video
  out_dtype: "rgb888"
  out_channel_order: [2,1,0]

anonymization_preprocessor: # Preprocessor
   in_tensor_name: source_video
   out_tensor_name: preprocess_anonymization
   data_format: hwc
   normalize_means: [0.485, 0.456, 0.406]
   normalize_stds: [0.229, 0.224, 0.225]

multiai_inference:  # InferenceOp
  backend: "trt"
  pre_processor_map:
    "anonymization": [preprocess_anonymization]
  inference_map:
    "anonymization": [ "anonymization_infer" ]
  enable_fp16: true

segmentation_visualizer:  # OrsiVizGXF Codelet
  swizzle_video : false # set this value to true to change the colorformat of the surgical video from rgb to bgr during vis
  stl_names: []
  stl_colors: [] # in RGBA format
  stl_keys: [] # see https://www.glfw.org/docs/3.3/group__keys.html
  in_tensor_names:
    - ""
    - anonymization_postprocessed

